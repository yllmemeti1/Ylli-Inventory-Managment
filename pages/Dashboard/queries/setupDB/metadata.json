{
  "pluginType": "DB",
  "pluginId": "postgres-plugin",
  "unpublishedAction": {
    "name": "setupDB",
    "datasource": {
      "name": "Mock_DB_V2",
      "pluginId": "postgres-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "id": "Mock_DB_V2",
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Dashboard",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "--\n-- PostgreSQL database dump\n--\n-- Dumped from database version 15.1\n-- Dumped by pg_dump version 15.2 (Homebrew)\nSET\n  statement_timeout = 0;\nSET\n  lock_timeout = 0;\nSET\n  idle_in_transaction_session_timeout = 0;\nSET\n  client_encoding = 'UTF8';\nSET\n  standard_conforming_strings = on;\nSELECT\n  pg_catalog.set_config('search_path', '', false);\nSET\n  check_function_bodies = false;\nSET\n  xmloption = content;\nSET\n  client_min_messages = warning;\nSET\n  row_security = off;\n--\n-- Name: public; Type: SCHEMA; Schema: -; Owner: pg_database_owner\n--\n-- CREATE SCHEMA public;\n-- ALTER SCHEMA public OWNER TO pg_database_owner;\n--\n-- Name: SCHEMA public; Type: COMMENT; Schema: -; Owner: pg_database_owner\n--\n-- COMMENT ON SCHEMA public IS 'standard public schema';\n\n--\n-- Name: update_company_product_updated(); Type: FUNCTION; Schema: public; Owner: postgres\n--\nCREATE FUNCTION public.update_company_product_updated() RETURNS trigger LANGUAGE plpgsql AS $$ BEGIN NEW.updated = NOW();\nRETURN NEW;\nEND;\n$$;\nALTER FUNCTION public.update_company_product_updated() OWNER TO postgres;\n--\n-- Name: update_company_updated(); Type: FUNCTION; Schema: public; Owner: postgres\n--\nCREATE FUNCTION public.update_company_updated() RETURNS trigger LANGUAGE plpgsql AS $$ BEGIN NEW.updated = NOW();\nRETURN NEW;\nEND;\n$$;\nALTER FUNCTION public.update_company_updated() OWNER TO postgres;\n\n--\n-- Name: update_location_updated(); Type: FUNCTION; Schema: public; Owner: postgres\n--\nCREATE FUNCTION public.update_location_updated() RETURNS trigger LANGUAGE plpgsql AS $$ BEGIN NEW.updated = NOW();\nRETURN NEW;\nEND;\n$$;\nALTER FUNCTION public.update_location_updated() OWNER TO postgres;\n--\n-- Name: update_product_location_updated(); Type: FUNCTION; Schema: public; Owner: postgres\n--\nCREATE FUNCTION public.update_product_location_updated() RETURNS trigger LANGUAGE plpgsql AS $$ BEGIN NEW.updated = NOW();\nRETURN NEW;\nEND;\n$$;\nALTER FUNCTION public.update_product_location_updated() OWNER TO postgres;\n--\n-- Name: update_product_updated(); Type: FUNCTION; Schema: public; Owner: postgres\n--\nCREATE FUNCTION public.update_product_updated() RETURNS trigger LANGUAGE plpgsql AS $$ BEGIN NEW.updated = NOW();\nRETURN NEW;\nEND;\n$$;\nALTER FUNCTION public.update_product_updated() OWNER TO postgres;\n--\n-- Name: update_product_variant_updated(); Type: FUNCTION; Schema: public; Owner: postgres\n--\nCREATE FUNCTION public.update_product_variant_updated() RETURNS trigger LANGUAGE plpgsql AS $$ BEGIN NEW.updated = NOW();\nRETURN NEW;\nEND;\n$$;\nALTER FUNCTION public.update_product_variant_updated() OWNER TO postgres;\n--\n-- Name: update_purchase_order_product_updated(); Type: FUNCTION; Schema: public; Owner: postgres\n--\nCREATE FUNCTION public.update_purchase_order_product_updated() RETURNS trigger LANGUAGE plpgsql AS $$ BEGIN NEW.updated = NOW();\nRETURN NEW;\nEND;\n$$;\nALTER FUNCTION public.update_purchase_order_product_updated() OWNER TO postgres;\n--\n-- Name: update_purchase_order_updated(); Type: FUNCTION; Schema: public; Owner: postgres\n--\nCREATE FUNCTION public.update_purchase_order_updated() RETURNS trigger LANGUAGE plpgsql AS $$ BEGIN NEW.updated = NOW();\nRETURN NEW;\nEND;\n$$;\nALTER FUNCTION public.update_purchase_order_updated() OWNER TO postgres;\nSET\n  default_tablespace = '';\n--\n-- Name: company; Type: TABLE; Schema: public; Owner: postgres\n--\nCREATE TABLE public.company (\n  id integer NOT NULL,\n  logo_url text,\n  name text NOT NULL,\n  address text,\n  phone text NOT NULL,\n  email text NOT NULL,\n  description text,\n  website text,\n  created timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,\n  updated timestamp with time zone NULL\n);\nALTER TABLE\n  public.company OWNER TO postgres;\n--\n-- Name: company_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres\n--\nCREATE SEQUENCE public.company_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;\nALTER TABLE\n  public.company_id_seq OWNER TO postgres;\n--\n-- Name: company_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres\n--\nALTER SEQUENCE public.company_id_seq OWNED BY public.company.id;\n--\n-- Name: company_product; Type: TABLE; Schema: public; Owner: postgres\n--\nCREATE TABLE public.company_product (\n  id integer NOT NULL, name text NOT NULL,\n  price numeric NOT NULL, description text,\n  image text, company_id integer NOT NULL,\n  updated timestamp with time zone\n);\nALTER TABLE\n  public.company_product OWNER TO postgres;\n--\n-- Name: company_product_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres\n--\nCREATE SEQUENCE public.company_product_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;\nALTER TABLE\n  public.company_product_id_seq OWNER TO postgres;\n--\n-- Name: company_product_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres\n--\nALTER SEQUENCE public.company_product_id_seq OWNED BY public.company_product.id;\n--\n-- Name: location; Type: TABLE; Schema: public; Owner: postgres\n--\nCREATE TABLE public.location (\n  id integer NOT NULL, label text NOT NULL,\n  type text,\n  company integer,\n  address1 text NOT NULL,\n  address2 text,\n  address3 text,\n  city text,\n  state text,\n  country text,\n  postal_code integer,\n  description text,\n  created timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,\n  updated timestamp with time zone\n);\nALTER TABLE\n  public.location OWNER TO postgres;\n--\n-- Name: location_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres\n--\nCREATE SEQUENCE public.location_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;\nALTER TABLE\n  public.location_id_seq OWNER TO postgres;\n--\n-- Name: location_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres\n--\nALTER SEQUENCE public.location_id_seq OWNED BY public.location.id;\n--\n-- Name: product; Type: TABLE; Schema: public; Owner: postgres\n--\nCREATE TABLE public.product (\n  id integer NOT NULL,\n  name character varying(200) NOT NULL,\n  description text,\n  image text,\n  type text,\n  updated timestamp with time zone\n);\nALTER TABLE\n  public.product OWNER TO postgres;\n--\n-- Name: product_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres\n--\nCREATE SEQUENCE public.product_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;\nALTER TABLE\n  public.product_id_seq OWNER TO postgres;\n--\n-- Name: product_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres\n--\nALTER SEQUENCE public.product_id_seq OWNED BY public.product.id;\n--\n-- Name: product_location; Type: TABLE; Schema: public; Owner: postgres\n--\nCREATE TABLE public.product_location (\n  id integer NOT NULL, product_variant_id integer NOT NULL,\n  location_id integer NOT NULL, stock integer NOT NULL,\n  created timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,\n  updated timestamp with time zone\n);\nALTER TABLE\n  public.product_location OWNER TO postgres;\n--\n-- Name: product_location_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres\n--\nCREATE SEQUENCE public.product_location_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;\nALTER TABLE\n  public.product_location_id_seq OWNER TO postgres;\n--\n-- Name: product_location_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres\n--\nALTER SEQUENCE public.product_location_id_seq OWNED BY public.product_location.id;\n--\n-- Name: product_variant; Type: TABLE; Schema: public; Owner: postgres\n--\nCREATE TABLE public.product_variant (\n  id integer NOT NULL, sku text, product_id integer NOT NULL,\n  location_id integer, description text,\n  label text, price numeric NOT NULL,\n  cost numeric, stock integer, low_stock integer,\n  updated timestamp with time zone\n);\nALTER TABLE\n  public.product_variant OWNER TO postgres;\n--\n-- Name: product_variant_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres\n--\nCREATE SEQUENCE public.product_variant_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;\nALTER TABLE\n  public.product_variant_id_seq OWNER TO postgres;\n--\n-- Name: product_variant_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres\n--\nALTER SEQUENCE public.product_variant_id_seq OWNED BY public.product_variant.id;\n--\n-- Name: purchase_order; Type: TABLE; Schema: public; Owner: postgres\n--\nCREATE TABLE public.purchase_order (\n  id integer NOT NULL, company_id integer NOT NULL,\n  location_id integer NOT NULL, order_date timestamp with time zone NOT NULL,\n  tax integer NULL, status text NOT NULL,\n  updated timestamp with time zone\n);\nALTER TABLE\n  public.purchase_order OWNER TO postgres;\n--\n-- Name: purchase_order_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres\n--\nCREATE SEQUENCE public.purchase_order_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;\nALTER TABLE\n  public.purchase_order_id_seq OWNER TO postgres;\n--\n-- Name: purchase_order_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres\n--\nALTER SEQUENCE public.purchase_order_id_seq OWNED BY public.purchase_order.id;\n--\n-- Name: purchase_order_product; Type: TABLE; Schema: public; Owner: postgres\n--\nCREATE TABLE public.purchase_order_product (\n  id integer NOT NULL, product_id integer NOT NULL,\n  quantity integer NOT NULL, purchase_order_id integer NOT NULL\n);\nALTER TABLE\n  public.purchase_order_product OWNER TO postgres;\n--\n-- Name: purchase_order_product_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres\n--\nCREATE SEQUENCE public.purchase_order_product_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;\nALTER TABLE\n  public.purchase_order_product_id_seq OWNER TO postgres;\n--\n-- Name: purchase_order_product_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres\n--\nALTER SEQUENCE public.purchase_order_product_id_seq OWNED BY public.purchase_order_product.id;\n--\n-- Name: company id; Type: DEFAULT; Schema: public; Owner: postgres\n--\nALTER TABLE\n  ONLY public.company ALTER COLUMN id\nSET\n  DEFAULT nextval(\n    'public.company_id_seq' :: regclass\n  );\n--\n-- Name: company_product id; Type: DEFAULT; Schema: public; Owner: postgres\n--\nALTER TABLE\n  ONLY public.company_product ALTER COLUMN id\nSET\n  DEFAULT nextval(\n    'public.company_product_id_seq' :: regclass\n  );\n--\n-- Name: location id; Type: DEFAULT; Schema: public; Owner: postgres\n--\nALTER TABLE\n  ONLY public.location ALTER COLUMN id\nSET\n  DEFAULT nextval(\n    'public.location_id_seq' :: regclass\n  );\n--\n-- Name: product id; Type: DEFAULT; Schema: public; Owner: postgres\n--\nALTER TABLE\n  ONLY public.product ALTER COLUMN id\nSET\n  DEFAULT nextval(\n    'public.product_id_seq' :: regclass\n  );\n--\n-- Name: product_location id; Type: DEFAULT; Schema: public; Owner: postgres\n--\nALTER TABLE\n  ONLY public.product_location ALTER COLUMN id\nSET\n  DEFAULT nextval(\n    'public.product_location_id_seq' :: regclass\n  );\n--\n-- Name: product_variant id; Type: DEFAULT; Schema: public; Owner: postgres\n--\nALTER TABLE\n  ONLY public.product_variant ALTER COLUMN id\nSET\n  DEFAULT nextval(\n    'public.product_variant_id_seq' :: regclass\n  );\n--\n-- Name: purchase_order id; Type: DEFAULT; Schema: public; Owner: postgres\n--\nALTER TABLE\n  ONLY public.purchase_order ALTER COLUMN id\nSET\n  DEFAULT nextval(\n    'public.purchase_order_id_seq' :: regclass\n  );\n--\n-- Name: purchase_order_product id; Type: DEFAULT; Schema: public; Owner: postgres\n--\nALTER TABLE\n  ONLY public.purchase_order_product ALTER COLUMN id\nSET\n  DEFAULT nextval(\n    'public.purchase_order_product_id_seq' :: regclass\n  );\n--\n-- Name: company pk_company; Type: CONSTRAINT; Schema: public; Owner: postgres\n--\nALTER TABLE\n  ONLY public.company\nADD\n  CONSTRAINT pk_company PRIMARY KEY (id);\n--\n-- Name: company_product pk_company_product; Type: CONSTRAINT; Schema: public; Owner: postgres\n--\nALTER TABLE\n  ONLY public.company_product\nADD\n  CONSTRAINT pk_company_product PRIMARY KEY (id);\n--\n-- Name: location pk_location; Type: CONSTRAINT; Schema: public; Owner: postgres\n--\nALTER TABLE\n  ONLY public.location\nADD\n  CONSTRAINT pk_location PRIMARY KEY (id);\n--\n-- Name: product pk_product; Type: CONSTRAINT; Schema: public; Owner: postgres\n--\nALTER TABLE\n  ONLY public.product\nADD\n  CONSTRAINT pk_product PRIMARY KEY (id);\n--\n-- Name: product_location pk_product_location; Type: CONSTRAINT; Schema: public; Owner: postgres\n--\nALTER TABLE\n  ONLY public.product_location\nADD\n  CONSTRAINT pk_product_location PRIMARY KEY (id);\n--\n-- Name: product_variant pk_product_variant; Type: CONSTRAINT; Schema: public; Owner: postgres\n--\nALTER TABLE\n  ONLY public.product_variant\nADD\n  CONSTRAINT pk_product_variant PRIMARY KEY (id);\n--\n-- Name: purchase_order pk_purchase_order; Type: CONSTRAINT; Schema: public; Owner: postgres\n--\nALTER TABLE\n  ONLY public.purchase_order\nADD\n  CONSTRAINT pk_purchase_order PRIMARY KEY (id);\n--\n-- Name: purchase_order_product pk_purchase_order_product; Type: CONSTRAINT; Schema: public; Owner: postgres\n--\nALTER TABLE\n  ONLY public.purchase_order_product\nADD\n  CONSTRAINT pk_purchase_order_product PRIMARY KEY (id);\n--\n-- Name: company uc_company_email; Type: CONSTRAINT; Schema: public; Owner: postgres\n--\nALTER TABLE\n  ONLY public.company\nADD\n  CONSTRAINT uc_company_email UNIQUE (email);\n--\n-- Name: company uc_company_phone; Type: CONSTRAINT; Schema: public; Owner: postgres\n--\nALTER TABLE\n  ONLY public.company\nADD\n  CONSTRAINT uc_company_phone UNIQUE (phone);\n--\n-- Name: product_variant uc_product_variant_sku; Type: CONSTRAINT; Schema: public; Owner: postgres\n--\nALTER TABLE\n  ONLY public.product_variant\nADD\n  CONSTRAINT uc_product_variant_sku UNIQUE (sku);\n--\n-- Name: idx_location_country; Type: INDEX; Schema: public; Owner: postgres\n--\nCREATE INDEX idx_location_country ON public.location USING btree (country);\n--\n-- Name: idx_location_postal_code; Type: INDEX; Schema: public; Owner: postgres\n--\nCREATE INDEX idx_location_postal_code ON public.location USING btree (postal_code);\n--\n-- Name: idx_location_state; Type: INDEX; Schema: public; Owner: postgres\n--\nCREATE INDEX idx_location_state ON public.location USING btree (state);\n--\n-- Name: idx_location_type; Type: INDEX; Schema: public; Owner: postgres\n--\nCREATE INDEX idx_location_type ON public.location USING btree (type);\n--\n-- Name: idx_product_type; Type: INDEX; Schema: public; Owner: postgres\n--\nCREATE INDEX idx_product_type ON public.product USING btree (type);\n--\n-- Name: company_product update_company_product_updated; Type: TRIGGER; Schema: public; Owner: postgres\n--\nCREATE TRIGGER update_company_product_updated BEFORE\nUPDATE\n  ON public.company_product FOR EACH ROW EXECUTE FUNCTION public.update_company_product_updated();\n--\n-- Name: company update_company_updated; Type: TRIGGER; Schema: public; Owner: postgres\n--\nCREATE TRIGGER update_company_updated BEFORE\nUPDATE\n  ON public.company FOR EACH ROW EXECUTE FUNCTION public.update_company_updated();\n--\n-- Name: location update_location_updated; Type: TRIGGER; Schema: public; Owner: postgres\n--\nCREATE TRIGGER update_location_updated BEFORE\nUPDATE\n  ON public.location FOR EACH ROW EXECUTE FUNCTION public.update_location_updated();\n--\n-- Name: product_location update_product_location_updated; Type: TRIGGER; Schema: public; Owner: postgres\n--\nCREATE TRIGGER update_product_location_updated BEFORE\nUPDATE\n  ON public.product_location FOR EACH ROW EXECUTE FUNCTION public.update_product_location_updated();\n--\n-- Name: product update_product_updated; Type: TRIGGER; Schema: public; Owner: postgres\n--\nCREATE TRIGGER update_product_updated BEFORE\nUPDATE\n  ON public.product FOR EACH ROW EXECUTE FUNCTION public.update_product_updated();\n--\n-- Name: product_variant update_product_variant_updated; Type: TRIGGER; Schema: public; Owner: postgres\n--\nCREATE TRIGGER update_product_variant_updated BEFORE\nUPDATE\n  ON public.product_variant FOR EACH ROW EXECUTE FUNCTION public.update_product_variant_updated();\n--\n-- Name: purchase_order_product update_purchase_order_product_updated; Type: TRIGGER; Schema: public; Owner: postgres\n--\nCREATE TRIGGER update_purchase_order_product_updated BEFORE\nUPDATE\n  ON public.purchase_order_product FOR EACH ROW EXECUTE FUNCTION public.update_purchase_order_product_updated();\n--\n-- Name: purchase_order update_purchase_order_updated; Type: TRIGGER; Schema: public; Owner: postgres\n--\nCREATE TRIGGER update_purchase_order_updated BEFORE\nUPDATE\n  ON public.purchase_order FOR EACH ROW EXECUTE FUNCTION public.update_purchase_order_updated();\n--\n-- Name: company_product fk_company_product_company_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n--\nALTER TABLE\n  ONLY public.company_product\nADD\n  CONSTRAINT fk_company_product_company_id FOREIGN KEY (company_id) REFERENCES public.company(id) ON UPDATE CASCADE ON DELETE CASCADE;\n--\n-- Name: location fk_location_company; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n--\nALTER TABLE\n  ONLY public.location\nADD\n  CONSTRAINT fk_location_company FOREIGN KEY (company) REFERENCES public.company(id) ON UPDATE CASCADE ON DELETE CASCADE;\n--\n-- Name: product_location fk_product_location_location_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n--\nALTER TABLE\n  ONLY public.product_location\nADD\n  CONSTRAINT fk_product_location_location_id FOREIGN KEY (location_id) REFERENCES public.location(id) ON UPDATE CASCADE ON DELETE CASCADE;\n--\n-- Name: product_location fk_product_location_product_variant_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n--\nALTER TABLE\n  ONLY public.product_location\nADD\n  CONSTRAINT fk_product_location_product_variant_id FOREIGN KEY (product_variant_id) REFERENCES public.product_variant(id) ON UPDATE CASCADE ON DELETE CASCADE;\n--\n-- Name: product_variant fk_product_variant_location_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n--\nALTER TABLE\n  ONLY public.product_variant\nADD\n  CONSTRAINT fk_product_variant_location_id FOREIGN KEY (location_id) REFERENCES public.location(id) ON UPDATE CASCADE ON DELETE CASCADE;\n--\n-- Name: product_variant fk_product_variant_product_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n--\nALTER TABLE\n  ONLY public.product_variant\nADD\n  CONSTRAINT fk_product_variant_product_id FOREIGN KEY (product_id) REFERENCES public.product(id) ON UPDATE CASCADE ON DELETE CASCADE;\n--\n-- Name: purchase_order fk_purchase_order_company_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n--\nALTER TABLE\n  ONLY public.purchase_order\nADD\n  CONSTRAINT fk_purchase_order_company_id FOREIGN KEY (company_id) REFERENCES public.company(id) ON UPDATE CASCADE ON DELETE CASCADE;\n--\n-- Name: purchase_order fk_purchase_order_location_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n--\nALTER TABLE\n  ONLY public.purchase_order\nADD\n  CONSTRAINT fk_purchase_order_location_id FOREIGN KEY (location_id) REFERENCES public.location(id) ON UPDATE CASCADE ON DELETE CASCADE;\n--\n-- Name: purchase_order_product fk_purchase_order_product_product_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n--\nALTER TABLE\n  ONLY public.purchase_order_product\nADD\n  CONSTRAINT fk_purchase_order_product_product_id FOREIGN KEY (product_id) REFERENCES public.company_product(id) ON UPDATE CASCADE ON DELETE CASCADE;\n--\n-- Name: purchase_order_product fk_purchase_order_product_purchase_order_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres\n--\nALTER TABLE\n  ONLY public.purchase_order_product\nADD\n  CONSTRAINT fk_purchase_order_product_purchase_order_id FOREIGN KEY (purchase_order_id) REFERENCES public.purchase_order(id) ON UPDATE CASCADE ON DELETE CASCADE;\n",
      "selfReferencingDataPaths": [],
      "pluginSpecifiedTemplates": [
        {
          "value": true
        }
      ]
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Dashboard_setupDB",
  "deleted": false,
  "gitSyncId": "64130134d67ea94e3d9723ea_6419aa3033970d1990c87b96"
}