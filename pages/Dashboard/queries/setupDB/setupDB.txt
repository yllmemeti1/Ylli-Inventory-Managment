--
-- PostgreSQL database dump
--
-- Dumped from database version 15.1
-- Dumped by pg_dump version 15.2 (Homebrew)
SET
  statement_timeout = 0;
SET
  lock_timeout = 0;
SET
  idle_in_transaction_session_timeout = 0;
SET
  client_encoding = 'UTF8';
SET
  standard_conforming_strings = on;
SELECT
  pg_catalog.set_config('search_path', '', false);
SET
  check_function_bodies = false;
SET
  xmloption = content;
SET
  client_min_messages = warning;
SET
  row_security = off;
--
-- Name: public; Type: SCHEMA; Schema: -; Owner: pg_database_owner
--
-- CREATE SCHEMA public;
-- ALTER SCHEMA public OWNER TO pg_database_owner;
--
-- Name: SCHEMA public; Type: COMMENT; Schema: -; Owner: pg_database_owner
--
-- COMMENT ON SCHEMA public IS 'standard public schema';

--
-- Name: update_company_product_updated(); Type: FUNCTION; Schema: public; Owner: postgres
--
CREATE FUNCTION public.update_company_product_updated() RETURNS trigger LANGUAGE plpgsql AS $$ BEGIN NEW.updated = NOW();
RETURN NEW;
END;
$$;
ALTER FUNCTION public.update_company_product_updated() OWNER TO postgres;
--
-- Name: update_company_updated(); Type: FUNCTION; Schema: public; Owner: postgres
--
CREATE FUNCTION public.update_company_updated() RETURNS trigger LANGUAGE plpgsql AS $$ BEGIN NEW.updated = NOW();
RETURN NEW;
END;
$$;
ALTER FUNCTION public.update_company_updated() OWNER TO postgres;

--
-- Name: update_location_updated(); Type: FUNCTION; Schema: public; Owner: postgres
--
CREATE FUNCTION public.update_location_updated() RETURNS trigger LANGUAGE plpgsql AS $$ BEGIN NEW.updated = NOW();
RETURN NEW;
END;
$$;
ALTER FUNCTION public.update_location_updated() OWNER TO postgres;
--
-- Name: update_product_location_updated(); Type: FUNCTION; Schema: public; Owner: postgres
--
CREATE FUNCTION public.update_product_location_updated() RETURNS trigger LANGUAGE plpgsql AS $$ BEGIN NEW.updated = NOW();
RETURN NEW;
END;
$$;
ALTER FUNCTION public.update_product_location_updated() OWNER TO postgres;
--
-- Name: update_product_updated(); Type: FUNCTION; Schema: public; Owner: postgres
--
CREATE FUNCTION public.update_product_updated() RETURNS trigger LANGUAGE plpgsql AS $$ BEGIN NEW.updated = NOW();
RETURN NEW;
END;
$$;
ALTER FUNCTION public.update_product_updated() OWNER TO postgres;
--
-- Name: update_product_variant_updated(); Type: FUNCTION; Schema: public; Owner: postgres
--
CREATE FUNCTION public.update_product_variant_updated() RETURNS trigger LANGUAGE plpgsql AS $$ BEGIN NEW.updated = NOW();
RETURN NEW;
END;
$$;
ALTER FUNCTION public.update_product_variant_updated() OWNER TO postgres;
--
-- Name: update_purchase_order_product_updated(); Type: FUNCTION; Schema: public; Owner: postgres
--
CREATE FUNCTION public.update_purchase_order_product_updated() RETURNS trigger LANGUAGE plpgsql AS $$ BEGIN NEW.updated = NOW();
RETURN NEW;
END;
$$;
ALTER FUNCTION public.update_purchase_order_product_updated() OWNER TO postgres;
--
-- Name: update_purchase_order_updated(); Type: FUNCTION; Schema: public; Owner: postgres
--
CREATE FUNCTION public.update_purchase_order_updated() RETURNS trigger LANGUAGE plpgsql AS $$ BEGIN NEW.updated = NOW();
RETURN NEW;
END;
$$;
ALTER FUNCTION public.update_purchase_order_updated() OWNER TO postgres;
SET
  default_tablespace = '';
--
-- Name: company; Type: TABLE; Schema: public; Owner: postgres
--
CREATE TABLE public.company (
  id integer NOT NULL,
  logo_url text,
  name text NOT NULL,
  address text,
  phone text NOT NULL,
  email text NOT NULL,
  description text,
  website text,
  created timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  updated timestamp with time zone NULL
);
ALTER TABLE
  public.company OWNER TO postgres;
--
-- Name: company_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--
CREATE SEQUENCE public.company_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
ALTER TABLE
  public.company_id_seq OWNER TO postgres;
--
-- Name: company_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--
ALTER SEQUENCE public.company_id_seq OWNED BY public.company.id;
--
-- Name: company_product; Type: TABLE; Schema: public; Owner: postgres
--
CREATE TABLE public.company_product (
  id integer NOT NULL, name text NOT NULL,
  price numeric NOT NULL, description text,
  image text, company_id integer NOT NULL,
  updated timestamp with time zone
);
ALTER TABLE
  public.company_product OWNER TO postgres;
--
-- Name: company_product_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--
CREATE SEQUENCE public.company_product_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
ALTER TABLE
  public.company_product_id_seq OWNER TO postgres;
--
-- Name: company_product_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--
ALTER SEQUENCE public.company_product_id_seq OWNED BY public.company_product.id;
--
-- Name: location; Type: TABLE; Schema: public; Owner: postgres
--
CREATE TABLE public.location (
  id integer NOT NULL, label text NOT NULL,
  type text,
  company integer,
  address1 text NOT NULL,
  address2 text,
  address3 text,
  city text,
  state text,
  country text,
  postal_code integer,
  description text,
  created timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  updated timestamp with time zone
);
ALTER TABLE
  public.location OWNER TO postgres;
--
-- Name: location_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--
CREATE SEQUENCE public.location_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
ALTER TABLE
  public.location_id_seq OWNER TO postgres;
--
-- Name: location_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--
ALTER SEQUENCE public.location_id_seq OWNED BY public.location.id;
--
-- Name: product; Type: TABLE; Schema: public; Owner: postgres
--
CREATE TABLE public.product (
  id integer NOT NULL,
  name character varying(200) NOT NULL,
  description text,
  image text,
  type text,
  updated timestamp with time zone
);
ALTER TABLE
  public.product OWNER TO postgres;
--
-- Name: product_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--
CREATE SEQUENCE public.product_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
ALTER TABLE
  public.product_id_seq OWNER TO postgres;
--
-- Name: product_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--
ALTER SEQUENCE public.product_id_seq OWNED BY public.product.id;
--
-- Name: product_location; Type: TABLE; Schema: public; Owner: postgres
--
CREATE TABLE public.product_location (
  id integer NOT NULL, product_variant_id integer NOT NULL,
  location_id integer NOT NULL, stock integer NOT NULL,
  created timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
  updated timestamp with time zone
);
ALTER TABLE
  public.product_location OWNER TO postgres;
--
-- Name: product_location_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--
CREATE SEQUENCE public.product_location_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
ALTER TABLE
  public.product_location_id_seq OWNER TO postgres;
--
-- Name: product_location_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--
ALTER SEQUENCE public.product_location_id_seq OWNED BY public.product_location.id;
--
-- Name: product_variant; Type: TABLE; Schema: public; Owner: postgres
--
CREATE TABLE public.product_variant (
  id integer NOT NULL, sku text, product_id integer NOT NULL,
  location_id integer, description text,
  label text, price numeric NOT NULL,
  cost numeric, stock integer, low_stock integer,
  updated timestamp with time zone
);
ALTER TABLE
  public.product_variant OWNER TO postgres;
--
-- Name: product_variant_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--
CREATE SEQUENCE public.product_variant_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
ALTER TABLE
  public.product_variant_id_seq OWNER TO postgres;
--
-- Name: product_variant_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--
ALTER SEQUENCE public.product_variant_id_seq OWNED BY public.product_variant.id;
--
-- Name: purchase_order; Type: TABLE; Schema: public; Owner: postgres
--
CREATE TABLE public.purchase_order (
  id integer NOT NULL, company_id integer NOT NULL,
  location_id integer NOT NULL, order_date timestamp with time zone NOT NULL,
  tax integer NULL, status text NOT NULL,
  updated timestamp with time zone
);
ALTER TABLE
  public.purchase_order OWNER TO postgres;
--
-- Name: purchase_order_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--
CREATE SEQUENCE public.purchase_order_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
ALTER TABLE
  public.purchase_order_id_seq OWNER TO postgres;
--
-- Name: purchase_order_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--
ALTER SEQUENCE public.purchase_order_id_seq OWNED BY public.purchase_order.id;
--
-- Name: purchase_order_product; Type: TABLE; Schema: public; Owner: postgres
--
CREATE TABLE public.purchase_order_product (
  id integer NOT NULL, product_id integer NOT NULL,
  quantity integer NOT NULL, purchase_order_id integer NOT NULL
);
ALTER TABLE
  public.purchase_order_product OWNER TO postgres;
--
-- Name: purchase_order_product_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--
CREATE SEQUENCE public.purchase_order_product_id_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
ALTER TABLE
  public.purchase_order_product_id_seq OWNER TO postgres;
--
-- Name: purchase_order_product_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--
ALTER SEQUENCE public.purchase_order_product_id_seq OWNED BY public.purchase_order_product.id;
--
-- Name: company id; Type: DEFAULT; Schema: public; Owner: postgres
--
ALTER TABLE
  ONLY public.company ALTER COLUMN id
SET
  DEFAULT nextval(
    'public.company_id_seq' :: regclass
  );
--
-- Name: company_product id; Type: DEFAULT; Schema: public; Owner: postgres
--
ALTER TABLE
  ONLY public.company_product ALTER COLUMN id
SET
  DEFAULT nextval(
    'public.company_product_id_seq' :: regclass
  );
--
-- Name: location id; Type: DEFAULT; Schema: public; Owner: postgres
--
ALTER TABLE
  ONLY public.location ALTER COLUMN id
SET
  DEFAULT nextval(
    'public.location_id_seq' :: regclass
  );
--
-- Name: product id; Type: DEFAULT; Schema: public; Owner: postgres
--
ALTER TABLE
  ONLY public.product ALTER COLUMN id
SET
  DEFAULT nextval(
    'public.product_id_seq' :: regclass
  );
--
-- Name: product_location id; Type: DEFAULT; Schema: public; Owner: postgres
--
ALTER TABLE
  ONLY public.product_location ALTER COLUMN id
SET
  DEFAULT nextval(
    'public.product_location_id_seq' :: regclass
  );
--
-- Name: product_variant id; Type: DEFAULT; Schema: public; Owner: postgres
--
ALTER TABLE
  ONLY public.product_variant ALTER COLUMN id
SET
  DEFAULT nextval(
    'public.product_variant_id_seq' :: regclass
  );
--
-- Name: purchase_order id; Type: DEFAULT; Schema: public; Owner: postgres
--
ALTER TABLE
  ONLY public.purchase_order ALTER COLUMN id
SET
  DEFAULT nextval(
    'public.purchase_order_id_seq' :: regclass
  );
--
-- Name: purchase_order_product id; Type: DEFAULT; Schema: public; Owner: postgres
--
ALTER TABLE
  ONLY public.purchase_order_product ALTER COLUMN id
SET
  DEFAULT nextval(
    'public.purchase_order_product_id_seq' :: regclass
  );
--
-- Name: company pk_company; Type: CONSTRAINT; Schema: public; Owner: postgres
--
ALTER TABLE
  ONLY public.company
ADD
  CONSTRAINT pk_company PRIMARY KEY (id);
--
-- Name: company_product pk_company_product; Type: CONSTRAINT; Schema: public; Owner: postgres
--
ALTER TABLE
  ONLY public.company_product
ADD
  CONSTRAINT pk_company_product PRIMARY KEY (id);
--
-- Name: location pk_location; Type: CONSTRAINT; Schema: public; Owner: postgres
--
ALTER TABLE
  ONLY public.location
ADD
  CONSTRAINT pk_location PRIMARY KEY (id);
--
-- Name: product pk_product; Type: CONSTRAINT; Schema: public; Owner: postgres
--
ALTER TABLE
  ONLY public.product
ADD
  CONSTRAINT pk_product PRIMARY KEY (id);
--
-- Name: product_location pk_product_location; Type: CONSTRAINT; Schema: public; Owner: postgres
--
ALTER TABLE
  ONLY public.product_location
ADD
  CONSTRAINT pk_product_location PRIMARY KEY (id);
--
-- Name: product_variant pk_product_variant; Type: CONSTRAINT; Schema: public; Owner: postgres
--
ALTER TABLE
  ONLY public.product_variant
ADD
  CONSTRAINT pk_product_variant PRIMARY KEY (id);
--
-- Name: purchase_order pk_purchase_order; Type: CONSTRAINT; Schema: public; Owner: postgres
--
ALTER TABLE
  ONLY public.purchase_order
ADD
  CONSTRAINT pk_purchase_order PRIMARY KEY (id);
--
-- Name: purchase_order_product pk_purchase_order_product; Type: CONSTRAINT; Schema: public; Owner: postgres
--
ALTER TABLE
  ONLY public.purchase_order_product
ADD
  CONSTRAINT pk_purchase_order_product PRIMARY KEY (id);
--
-- Name: company uc_company_email; Type: CONSTRAINT; Schema: public; Owner: postgres
--
ALTER TABLE
  ONLY public.company
ADD
  CONSTRAINT uc_company_email UNIQUE (email);
--
-- Name: company uc_company_phone; Type: CONSTRAINT; Schema: public; Owner: postgres
--
ALTER TABLE
  ONLY public.company
ADD
  CONSTRAINT uc_company_phone UNIQUE (phone);
--
-- Name: product_variant uc_product_variant_sku; Type: CONSTRAINT; Schema: public; Owner: postgres
--
ALTER TABLE
  ONLY public.product_variant
ADD
  CONSTRAINT uc_product_variant_sku UNIQUE (sku);
--
-- Name: idx_location_country; Type: INDEX; Schema: public; Owner: postgres
--
CREATE INDEX idx_location_country ON public.location USING btree (country);
--
-- Name: idx_location_postal_code; Type: INDEX; Schema: public; Owner: postgres
--
CREATE INDEX idx_location_postal_code ON public.location USING btree (postal_code);
--
-- Name: idx_location_state; Type: INDEX; Schema: public; Owner: postgres
--
CREATE INDEX idx_location_state ON public.location USING btree (state);
--
-- Name: idx_location_type; Type: INDEX; Schema: public; Owner: postgres
--
CREATE INDEX idx_location_type ON public.location USING btree (type);
--
-- Name: idx_product_type; Type: INDEX; Schema: public; Owner: postgres
--
CREATE INDEX idx_product_type ON public.product USING btree (type);
--
-- Name: company_product update_company_product_updated; Type: TRIGGER; Schema: public; Owner: postgres
--
CREATE TRIGGER update_company_product_updated BEFORE
UPDATE
  ON public.company_product FOR EACH ROW EXECUTE FUNCTION public.update_company_product_updated();
--
-- Name: company update_company_updated; Type: TRIGGER; Schema: public; Owner: postgres
--
CREATE TRIGGER update_company_updated BEFORE
UPDATE
  ON public.company FOR EACH ROW EXECUTE FUNCTION public.update_company_updated();
--
-- Name: location update_location_updated; Type: TRIGGER; Schema: public; Owner: postgres
--
CREATE TRIGGER update_location_updated BEFORE
UPDATE
  ON public.location FOR EACH ROW EXECUTE FUNCTION public.update_location_updated();
--
-- Name: product_location update_product_location_updated; Type: TRIGGER; Schema: public; Owner: postgres
--
CREATE TRIGGER update_product_location_updated BEFORE
UPDATE
  ON public.product_location FOR EACH ROW EXECUTE FUNCTION public.update_product_location_updated();
--
-- Name: product update_product_updated; Type: TRIGGER; Schema: public; Owner: postgres
--
CREATE TRIGGER update_product_updated BEFORE
UPDATE
  ON public.product FOR EACH ROW EXECUTE FUNCTION public.update_product_updated();
--
-- Name: product_variant update_product_variant_updated; Type: TRIGGER; Schema: public; Owner: postgres
--
CREATE TRIGGER update_product_variant_updated BEFORE
UPDATE
  ON public.product_variant FOR EACH ROW EXECUTE FUNCTION public.update_product_variant_updated();
--
-- Name: purchase_order_product update_purchase_order_product_updated; Type: TRIGGER; Schema: public; Owner: postgres
--
CREATE TRIGGER update_purchase_order_product_updated BEFORE
UPDATE
  ON public.purchase_order_product FOR EACH ROW EXECUTE FUNCTION public.update_purchase_order_product_updated();
--
-- Name: purchase_order update_purchase_order_updated; Type: TRIGGER; Schema: public; Owner: postgres
--
CREATE TRIGGER update_purchase_order_updated BEFORE
UPDATE
  ON public.purchase_order FOR EACH ROW EXECUTE FUNCTION public.update_purchase_order_updated();
--
-- Name: company_product fk_company_product_company_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--
ALTER TABLE
  ONLY public.company_product
ADD
  CONSTRAINT fk_company_product_company_id FOREIGN KEY (company_id) REFERENCES public.company(id) ON UPDATE CASCADE ON DELETE CASCADE;
--
-- Name: location fk_location_company; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--
ALTER TABLE
  ONLY public.location
ADD
  CONSTRAINT fk_location_company FOREIGN KEY (company) REFERENCES public.company(id) ON UPDATE CASCADE ON DELETE CASCADE;
--
-- Name: product_location fk_product_location_location_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--
ALTER TABLE
  ONLY public.product_location
ADD
  CONSTRAINT fk_product_location_location_id FOREIGN KEY (location_id) REFERENCES public.location(id) ON UPDATE CASCADE ON DELETE CASCADE;
--
-- Name: product_location fk_product_location_product_variant_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--
ALTER TABLE
  ONLY public.product_location
ADD
  CONSTRAINT fk_product_location_product_variant_id FOREIGN KEY (product_variant_id) REFERENCES public.product_variant(id) ON UPDATE CASCADE ON DELETE CASCADE;
--
-- Name: product_variant fk_product_variant_location_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--
ALTER TABLE
  ONLY public.product_variant
ADD
  CONSTRAINT fk_product_variant_location_id FOREIGN KEY (location_id) REFERENCES public.location(id) ON UPDATE CASCADE ON DELETE CASCADE;
--
-- Name: product_variant fk_product_variant_product_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--
ALTER TABLE
  ONLY public.product_variant
ADD
  CONSTRAINT fk_product_variant_product_id FOREIGN KEY (product_id) REFERENCES public.product(id) ON UPDATE CASCADE ON DELETE CASCADE;
--
-- Name: purchase_order fk_purchase_order_company_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--
ALTER TABLE
  ONLY public.purchase_order
ADD
  CONSTRAINT fk_purchase_order_company_id FOREIGN KEY (company_id) REFERENCES public.company(id) ON UPDATE CASCADE ON DELETE CASCADE;
--
-- Name: purchase_order fk_purchase_order_location_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--
ALTER TABLE
  ONLY public.purchase_order
ADD
  CONSTRAINT fk_purchase_order_location_id FOREIGN KEY (location_id) REFERENCES public.location(id) ON UPDATE CASCADE ON DELETE CASCADE;
--
-- Name: purchase_order_product fk_purchase_order_product_product_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--
ALTER TABLE
  ONLY public.purchase_order_product
ADD
  CONSTRAINT fk_purchase_order_product_product_id FOREIGN KEY (product_id) REFERENCES public.company_product(id) ON UPDATE CASCADE ON DELETE CASCADE;
--
-- Name: purchase_order_product fk_purchase_order_product_purchase_order_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--
ALTER TABLE
  ONLY public.purchase_order_product
ADD
  CONSTRAINT fk_purchase_order_product_purchase_order_id FOREIGN KEY (purchase_order_id) REFERENCES public.purchase_order(id) ON UPDATE CASCADE ON DELETE CASCADE;
